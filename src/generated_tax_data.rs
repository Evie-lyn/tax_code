// This file is automatically generated by build.rs
// Do not edit this file directly. Changes will be overwritten.

#[derive(Debug, Clone, Copy)]
pub struct Bracket(pub f64, pub f64); // upper_boundary, tax_rate

pub fn al_qualifying_surviving_spouse_tax_2024() -> Vec<Bracket> {
    vec![
        Bracket(1000.0, 0.0),
        Bracket(6000.0, 0.0),
        Bracket(f64::INFINITY, 0.1),
    ]
}

pub fn al_married_filing_separately_tax_2024() -> Vec<Bracket> {
    vec![
        Bracket(500.0, 0.0),
        Bracket(3000.0, 0.0),
        Bracket(f64::INFINITY, 0.1),
    ]
}

pub fn al_head_of_household_tax_2024() -> Vec<Bracket> {
    vec![
        Bracket(500.0, 0.0),
        Bracket(3000.0, 0.0),
        Bracket(f64::INFINITY, 0.1),
    ]
}

pub fn al_single_tax_2024() -> Vec<Bracket> {
    vec![
        Bracket(500.0, 0.0),
        Bracket(3000.0, 0.0),
        Bracket(f64::INFINITY, 0.1),
    ]
}

pub fn al_married_filing_jointly_tax_2024() -> Vec<Bracket> {
    vec![
        Bracket(1000.0, 0.0),
        Bracket(6000.0, 0.0),
        Bracket(f64::INFINITY, 0.1),
    ]
}

pub fn co_qualifying_surviving_spouse_tax_2024() -> Vec<Bracket> {
    vec![
        Bracket(f64::INFINITY, 0.0),
    ]
}

pub fn co_married_filing_separately_tax_2024() -> Vec<Bracket> {
    vec![
        Bracket(f64::INFINITY, 0.0),
    ]
}

pub fn co_head_of_household_tax_2024() -> Vec<Bracket> {
    vec![
        Bracket(f64::INFINITY, 0.0),
    ]
}

pub fn co_married_filing_jointly_tax_2024() -> Vec<Bracket> {
    vec![
        Bracket(f64::INFINITY, 0.0),
    ]
}

pub fn co_single_tax_2024() -> Vec<Bracket> {
    vec![
        Bracket(f64::INFINITY, 0.0),
    ]
}

pub fn co_married_filing_jointly_tax_2025() -> Vec<Bracket> {
    vec![
        Bracket(f64::INFINITY, 0.0),
    ]
}

pub fn co_married_filing_separately_tax_2025() -> Vec<Bracket> {
    vec![
        Bracket(f64::INFINITY, 0.0),
    ]
}

pub fn co_head_of_household_tax_2025() -> Vec<Bracket> {
    vec![
        Bracket(f64::INFINITY, 0.0),
    ]
}

pub fn co_single_tax_2025() -> Vec<Bracket> {
    vec![
        Bracket(f64::INFINITY, 0.0),
    ]
}

pub fn co_qualifying_surviving_spouse_tax_2025() -> Vec<Bracket> {
    vec![
        Bracket(f64::INFINITY, 0.0),
    ]
}

pub fn az_head_of_household_tax_2024() -> Vec<Bracket> {
    vec![
        Bracket(f64::INFINITY, 0.0),
    ]
}

pub fn az_qualifying_surviving_spouse_tax_2024() -> Vec<Bracket> {
    vec![
        Bracket(f64::INFINITY, 0.0),
    ]
}

pub fn az_married_filing_separately_tax_2024() -> Vec<Bracket> {
    vec![
        Bracket(f64::INFINITY, 0.0),
    ]
}

pub fn az_married_filing_jointly_tax_2024() -> Vec<Bracket> {
    vec![
        Bracket(f64::INFINITY, 0.0),
    ]
}

pub fn az_single_tax_2024() -> Vec<Bracket> {
    vec![
        Bracket(f64::INFINITY, 0.0),
    ]
}

pub fn az_head_of_household_tax_2025() -> Vec<Bracket> {
    vec![
        Bracket(f64::INFINITY, 0.0),
    ]
}

pub fn az_qualifying_surviving_spouse_tax_2025() -> Vec<Bracket> {
    vec![
        Bracket(f64::INFINITY, 0.0),
    ]
}

pub fn az_single_tax_2025() -> Vec<Bracket> {
    vec![
        Bracket(f64::INFINITY, 0.0),
    ]
}

pub fn az_married_filing_jointly_tax_2025() -> Vec<Bracket> {
    vec![
        Bracket(f64::INFINITY, 0.0),
    ]
}

pub fn az_married_filing_separately_tax_2025() -> Vec<Bracket> {
    vec![
        Bracket(f64::INFINITY, 0.0),
    ]
}

pub fn ca_qualifying_surviving_spouse_tax_2024() -> Vec<Bracket> {
    vec![
        Bracket(21512.0, 0.0),
        Bracket(50998.0, 0.0),
        Bracket(80490.0, 0.0),
        Bracket(111732.0, 0.1),
        Bracket(141212.0, 0.1),
        Bracket(721318.0, 0.1),
        Bracket(865574.0, 0.1),
        Bracket(1442628.0, 0.1),
        Bracket(f64::INFINITY, 0.1),
    ]
}

pub fn ca_married_filing_jointly_tax_2024() -> Vec<Bracket> {
    vec![
        Bracket(21512.0, 0.0),
        Bracket(50998.0, 0.0),
        Bracket(80490.0, 0.0),
        Bracket(111732.0, 0.1),
        Bracket(141212.0, 0.1),
        Bracket(721318.0, 0.1),
        Bracket(865574.0, 0.1),
        Bracket(1442628.0, 0.1),
        Bracket(f64::INFINITY, 0.1),
    ]
}

pub fn ca_single_tax_2024() -> Vec<Bracket> {
    vec![
        Bracket(10756.0, 0.0),
        Bracket(25499.0, 0.0),
        Bracket(40245.0, 0.0),
        Bracket(55866.0, 0.1),
        Bracket(70606.0, 0.1),
        Bracket(360659.0, 0.1),
        Bracket(432787.0, 0.1),
        Bracket(721314.0, 0.1),
        Bracket(f64::INFINITY, 0.1),
    ]
}

pub fn ca_married_filing_separately_tax_2024() -> Vec<Bracket> {
    vec![
        Bracket(10756.0, 0.0),
        Bracket(25499.0, 0.0),
        Bracket(40245.0, 0.0),
        Bracket(55866.0, 0.1),
        Bracket(70606.0, 0.1),
        Bracket(360659.0, 0.1),
        Bracket(432787.0, 0.1),
        Bracket(721314.0, 0.1),
        Bracket(f64::INFINITY, 0.1),
    ]
}

pub fn ca_head_of_household_tax_2024() -> Vec<Bracket> {
    vec![
        Bracket(21527.0, 0.0),
        Bracket(51000.0, 0.0),
        Bracket(65744.0, 0.0),
        Bracket(81364.0, 0.1),
        Bracket(96107.0, 0.1),
        Bracket(490493.0, 0.1),
        Bracket(588593.0, 0.1),
        Bracket(980987.0, 0.1),
        Bracket(f64::INFINITY, 0.1),
    ]
}

pub fn fl_qualifying_surviving_spouse_tax_2024() -> Vec<Bracket> {
    vec![
        Bracket(f64::INFINITY, 0.0),
    ]
}

pub fn fl_head_of_household_tax_2024() -> Vec<Bracket> {
    vec![
        Bracket(f64::INFINITY, 0.0),
    ]
}

pub fn fl_married_filing_separately_tax_2024() -> Vec<Bracket> {
    vec![
        Bracket(f64::INFINITY, 0.0),
    ]
}

pub fn fl_single_tax_2024() -> Vec<Bracket> {
    vec![
        Bracket(f64::INFINITY, 0.0),
    ]
}

pub fn fl_married_filing_jointly_tax_2024() -> Vec<Bracket> {
    vec![
        Bracket(f64::INFINITY, 0.0),
    ]
}

pub fn fl_head_of_household_tax_2025() -> Vec<Bracket> {
    vec![
        Bracket(f64::INFINITY, 0.0),
    ]
}

pub fn fl_qualifying_surviving_spouse_tax_2025() -> Vec<Bracket> {
    vec![
        Bracket(f64::INFINITY, 0.0),
    ]
}

pub fn fl_single_tax_2025() -> Vec<Bracket> {
    vec![
        Bracket(f64::INFINITY, 0.0),
    ]
}

pub fn fl_married_filing_separately_tax_2025() -> Vec<Bracket> {
    vec![
        Bracket(f64::INFINITY, 0.0),
    ]
}

pub fn fl_married_filing_jointly_tax_2025() -> Vec<Bracket> {
    vec![
        Bracket(f64::INFINITY, 0.0),
    ]
}

pub fn mi_married_filing_separately_tax_2024() -> Vec<Bracket> {
    vec![
        Bracket(f64::INFINITY, 0.0),
    ]
}

pub fn mi_qualifying_surviving_spouse_tax_2024() -> Vec<Bracket> {
    vec![
        Bracket(f64::INFINITY, 0.0),
    ]
}

pub fn mi_head_of_household_tax_2024() -> Vec<Bracket> {
    vec![
        Bracket(f64::INFINITY, 0.0),
    ]
}

pub fn mi_single_tax_2024() -> Vec<Bracket> {
    vec![
        Bracket(f64::INFINITY, 0.0),
    ]
}

pub fn mi_married_filing_jointly_tax_2024() -> Vec<Bracket> {
    vec![
        Bracket(f64::INFINITY, 0.0),
    ]
}

pub fn mi_married_filing_jointly_tax_2025() -> Vec<Bracket> {
    vec![
        Bracket(f64::INFINITY, 0.0),
    ]
}

pub fn mi_qualifying_surviving_spouse_tax_2025() -> Vec<Bracket> {
    vec![
        Bracket(f64::INFINITY, 0.0),
    ]
}

pub fn mi_single_tax_2025() -> Vec<Bracket> {
    vec![
        Bracket(f64::INFINITY, 0.0),
    ]
}

pub fn mi_married_filing_separately_tax_2025() -> Vec<Bracket> {
    vec![
        Bracket(f64::INFINITY, 0.0),
    ]
}

pub fn mi_head_of_household_tax_2025() -> Vec<Bracket> {
    vec![
        Bracket(f64::INFINITY, 0.0),
    ]
}

pub fn la_married_filing_separately_tax_2025() -> Vec<Bracket> {
    vec![
        Bracket(f64::INFINITY, 0.0),
    ]
}

pub fn la_single_tax_2025() -> Vec<Bracket> {
    vec![
        Bracket(f64::INFINITY, 0.0),
    ]
}

pub fn la_married_filing_jointly_tax_2025() -> Vec<Bracket> {
    vec![
        Bracket(f64::INFINITY, 0.0),
    ]
}

pub fn la_qualifying_surviving_spouse_tax_2025() -> Vec<Bracket> {
    vec![
        Bracket(f64::INFINITY, 0.0),
    ]
}

pub fn la_head_of_household_tax_2025() -> Vec<Bracket> {
    vec![
        Bracket(f64::INFINITY, 0.0),
    ]
}

pub fn la_head_of_household_tax_2024() -> Vec<Bracket> {
    vec![
        Bracket(12500.0, 0.0),
        Bracket(50000.0, 0.0),
        Bracket(f64::INFINITY, 0.0),
    ]
}

pub fn la_single_tax_2024() -> Vec<Bracket> {
    vec![
        Bracket(12500.0, 0.0),
        Bracket(50000.0, 0.0),
        Bracket(f64::INFINITY, 0.0),
    ]
}

pub fn la_married_filing_separately_tax_2024() -> Vec<Bracket> {
    vec![
        Bracket(12500.0, 0.0),
        Bracket(50000.0, 0.0),
        Bracket(f64::INFINITY, 0.0),
    ]
}

pub fn la_married_filing_jointly_tax_2024() -> Vec<Bracket> {
    vec![
        Bracket(25000.0, 0.0),
        Bracket(100000.0, 0.0),
        Bracket(f64::INFINITY, 0.0),
    ]
}

pub fn la_qualifying_surviving_spouse_tax_2024() -> Vec<Bracket> {
    vec![
        Bracket(25000.0, 0.0),
        Bracket(100000.0, 0.0),
        Bracket(f64::INFINITY, 0.0),
    ]
}

pub fn mn_married_filing_separately_tax_2025() -> Vec<Bracket> {
    vec![
        Bracket(23810.0, 0.1),
        Bracket(94590.0, 0.1),
        Bracket(165205.0, 0.1),
        Bracket(f64::INFINITY, 0.1),
    ]
}

pub fn mn_married_filing_jointly_tax_2025() -> Vec<Bracket> {
    vec![
        Bracket(47620.0, 0.1),
        Bracket(189180.0, 0.1),
        Bracket(330410.0, 0.1),
        Bracket(f64::INFINITY, 0.1),
    ]
}

pub fn mn_head_of_household_tax_2025() -> Vec<Bracket> {
    vec![
        Bracket(40100.0, 0.1),
        Bracket(161130.0, 0.1),
        Bracket(264050.0, 0.1),
        Bracket(f64::INFINITY, 0.1),
    ]
}

pub fn mn_single_tax_2025() -> Vec<Bracket> {
    vec![
        Bracket(32570.0, 0.1),
        Bracket(106990.0, 0.1),
        Bracket(198630.0, 0.1),
        Bracket(f64::INFINITY, 0.1),
    ]
}

pub fn mn_qualifying_surviving_spouse_tax_2025() -> Vec<Bracket> {
    vec![
        Bracket(47620.0, 0.1),
        Bracket(189180.0, 0.1),
        Bracket(330410.0, 0.1),
        Bracket(f64::INFINITY, 0.1),
    ]
}

pub fn mn_head_of_household_tax_2024() -> Vec<Bracket> {
    vec![
        Bracket(39010.0, 0.1),
        Bracket(156760.0, 0.1),
        Bracket(256880.0, 0.1),
        Bracket(f64::INFINITY, 0.1),
    ]
}

pub fn mn_married_filing_separately_tax_2024() -> Vec<Bracket> {
    vec![
        Bracket(23165.0, 0.1),
        Bracket(92020.0, 0.1),
        Bracket(160725.0, 0.1),
        Bracket(f64::INFINITY, 0.1),
    ]
}

pub fn mn_single_tax_2024() -> Vec<Bracket> {
    vec![
        Bracket(31690.0, 0.1),
        Bracket(104090.0, 0.1),
        Bracket(193240.0, 0.1),
        Bracket(f64::INFINITY, 0.1),
    ]
}

pub fn mn_qualifying_surviving_spouse_tax_2024() -> Vec<Bracket> {
    vec![
        Bracket(46330.0, 0.1),
        Bracket(184040.0, 0.1),
        Bracket(321450.0, 0.1),
        Bracket(f64::INFINITY, 0.1),
    ]
}

pub fn mn_married_filing_jointly_tax_2024() -> Vec<Bracket> {
    vec![
        Bracket(46330.0, 0.1),
        Bracket(184040.0, 0.1),
        Bracket(321450.0, 0.1),
        Bracket(f64::INFINITY, 0.1),
    ]
}

pub fn ct_single_tax_2024() -> Vec<Bracket> {
    vec![
        Bracket(10000.0, 0.0),
        Bracket(50000.0, 0.0),
        Bracket(100000.0, 0.1),
        Bracket(200000.0, 0.1),
        Bracket(250000.0, 0.1),
        Bracket(500000.0, 0.1),
        Bracket(f64::INFINITY, 0.1),
    ]
}

pub fn ct_married_filing_jointly_tax_2024() -> Vec<Bracket> {
    vec![
        Bracket(20000.0, 0.0),
        Bracket(100000.0, 0.0),
        Bracket(200000.0, 0.1),
        Bracket(400000.0, 0.1),
        Bracket(500000.0, 0.1),
        Bracket(1000000.0, 0.1),
        Bracket(f64::INFINITY, 0.1),
    ]
}

pub fn ct_qualifying_surviving_spouse_tax_2024() -> Vec<Bracket> {
    vec![
        Bracket(20000.0, 0.0),
        Bracket(100000.0, 0.0),
        Bracket(200000.0, 0.1),
        Bracket(400000.0, 0.1),
        Bracket(500000.0, 0.1),
        Bracket(1000000.0, 0.1),
        Bracket(f64::INFINITY, 0.1),
    ]
}

pub fn ct_head_of_household_tax_2024() -> Vec<Bracket> {
    vec![
        Bracket(16000.0, 0.0),
        Bracket(80000.0, 0.0),
        Bracket(160000.0, 0.1),
        Bracket(320000.0, 0.1),
        Bracket(400000.0, 0.1),
        Bracket(800000.0, 0.1),
        Bracket(f64::INFINITY, 0.1),
    ]
}

pub fn ct_married_filing_separately_tax_2024() -> Vec<Bracket> {
    vec![
        Bracket(10000.0, 0.0),
        Bracket(50000.0, 0.0),
        Bracket(100000.0, 0.1),
        Bracket(200000.0, 0.1),
        Bracket(250000.0, 0.1),
        Bracket(500000.0, 0.1),
        Bracket(f64::INFINITY, 0.1),
    ]
}

pub fn ct_married_filing_jointly_tax_2025() -> Vec<Bracket> {
    vec![
        Bracket(20000.0, 0.0),
        Bracket(100000.0, 0.0),
        Bracket(200000.0, 0.1),
        Bracket(400000.0, 0.1),
        Bracket(500000.0, 0.1),
        Bracket(1000000.0, 0.1),
        Bracket(f64::INFINITY, 0.1),
    ]
}

pub fn ct_single_tax_2025() -> Vec<Bracket> {
    vec![
        Bracket(10000.0, 0.0),
        Bracket(50000.0, 0.0),
        Bracket(100000.0, 0.1),
        Bracket(200000.0, 0.1),
        Bracket(250000.0, 0.1),
        Bracket(500000.0, 0.1),
        Bracket(f64::INFINITY, 0.1),
    ]
}

pub fn ct_qualifying_surviving_spouse_tax_2025() -> Vec<Bracket> {
    vec![
        Bracket(20000.0, 0.0),
        Bracket(100000.0, 0.0),
        Bracket(200000.0, 0.1),
        Bracket(400000.0, 0.1),
        Bracket(500000.0, 0.1),
        Bracket(1000000.0, 0.1),
        Bracket(f64::INFINITY, 0.1),
    ]
}

pub fn ct_married_filing_separately_tax_2025() -> Vec<Bracket> {
    vec![
        Bracket(10000.0, 0.0),
        Bracket(50000.0, 0.0),
        Bracket(100000.0, 0.1),
        Bracket(200000.0, 0.1),
        Bracket(250000.0, 0.1),
        Bracket(500000.0, 0.1),
        Bracket(f64::INFINITY, 0.1),
    ]
}

pub fn ct_head_of_household_tax_2025() -> Vec<Bracket> {
    vec![
        Bracket(16000.0, 0.0),
        Bracket(80000.0, 0.0),
        Bracket(160000.0, 0.1),
        Bracket(320000.0, 0.1),
        Bracket(400000.0, 0.1),
        Bracket(800000.0, 0.1),
        Bracket(f64::INFINITY, 0.1),
    ]
}

pub fn ne_married_filing_separately_tax_2024() -> Vec<Bracket> {
    vec![
        Bracket(2999.0, 0.0),
        Bracket(17999.0, 0.0),
        Bracket(28999.0, 0.1),
        Bracket(f64::INFINITY, 0.1),
    ]
}

pub fn ne_head_of_household_tax_2024() -> Vec<Bracket> {
    vec![
        Bracket(5599.0, 0.0),
        Bracket(28799.0, 0.0),
        Bracket(42999.0, 0.1),
        Bracket(f64::INFINITY, 0.1),
    ]
}

pub fn ne_single_tax_2024() -> Vec<Bracket> {
    vec![
        Bracket(2999.0, 0.0),
        Bracket(17999.0, 0.0),
        Bracket(28999.0, 0.1),
        Bracket(f64::INFINITY, 0.1),
    ]
}

pub fn ne_married_filing_jointly_tax_2024() -> Vec<Bracket> {
    vec![
        Bracket(5999.0, 0.0),
        Bracket(35999.0, 0.0),
        Bracket(57999.0, 0.1),
        Bracket(f64::INFINITY, 0.1),
    ]
}

pub fn ne_qualifying_surviving_spouse_tax_2024() -> Vec<Bracket> {
    vec![
        Bracket(5999.0, 0.0),
        Bracket(35999.0, 0.0),
        Bracket(57999.0, 0.1),
        Bracket(f64::INFINITY, 0.1),
    ]
}

pub fn ne_single_tax_2025() -> Vec<Bracket> {
    vec![
        Bracket(2999.0, 0.0),
        Bracket(17999.0, 0.0),
        Bracket(28999.0, 0.1),
        Bracket(f64::INFINITY, 0.1),
    ]
}

pub fn ne_qualifying_surviving_spouse_tax_2025() -> Vec<Bracket> {
    vec![
        Bracket(5999.0, 0.0),
        Bracket(35999.0, 0.0),
        Bracket(57999.0, 0.1),
        Bracket(f64::INFINITY, 0.1),
    ]
}

pub fn ne_married_filing_jointly_tax_2025() -> Vec<Bracket> {
    vec![
        Bracket(5999.0, 0.0),
        Bracket(35999.0, 0.0),
        Bracket(57999.0, 0.1),
        Bracket(f64::INFINITY, 0.1),
    ]
}

pub fn ne_head_of_household_tax_2025() -> Vec<Bracket> {
    vec![
        Bracket(5599.0, 0.0),
        Bracket(28799.0, 0.0),
        Bracket(42999.0, 0.1),
        Bracket(f64::INFINITY, 0.1),
    ]
}

pub fn ne_married_filing_separately_tax_2025() -> Vec<Bracket> {
    vec![
        Bracket(2999.0, 0.0),
        Bracket(17999.0, 0.0),
        Bracket(28999.0, 0.1),
        Bracket(f64::INFINITY, 0.1),
    ]
}

pub fn md_qualifying_surviving_spouse_tax_2025() -> Vec<Bracket> {
    vec![
        Bracket(1000.0, 0.0),
        Bracket(2000.0, 0.0),
        Bracket(3000.0, 0.0),
        Bracket(150000.0, 0.0),
        Bracket(175000.0, 0.1),
        Bracket(225000.0, 0.1),
        Bracket(300000.0, 0.1),
        Bracket(f64::INFINITY, 0.1),
    ]
}

pub fn md_married_filing_jointly_tax_2025() -> Vec<Bracket> {
    vec![
        Bracket(1000.0, 0.0),
        Bracket(2000.0, 0.0),
        Bracket(3000.0, 0.0),
        Bracket(150000.0, 0.0),
        Bracket(175000.0, 0.1),
        Bracket(225000.0, 0.1),
        Bracket(300000.0, 0.1),
        Bracket(f64::INFINITY, 0.1),
    ]
}

pub fn md_single_tax_2025() -> Vec<Bracket> {
    vec![
        Bracket(1000.0, 0.0),
        Bracket(2000.0, 0.0),
        Bracket(3000.0, 0.0),
        Bracket(100000.0, 0.0),
        Bracket(125000.0, 0.1),
        Bracket(150000.0, 0.1),
        Bracket(250000.0, 0.1),
        Bracket(f64::INFINITY, 0.1),
    ]
}

pub fn md_head_of_household_tax_2025() -> Vec<Bracket> {
    vec![
        Bracket(1000.0, 0.0),
        Bracket(2000.0, 0.0),
        Bracket(3000.0, 0.0),
        Bracket(150000.0, 0.0),
        Bracket(175000.0, 0.1),
        Bracket(225000.0, 0.1),
        Bracket(300000.0, 0.1),
        Bracket(f64::INFINITY, 0.1),
    ]
}

pub fn md_married_filing_separately_tax_2025() -> Vec<Bracket> {
    vec![
        Bracket(1000.0, 0.0),
        Bracket(2000.0, 0.0),
        Bracket(3000.0, 0.0),
        Bracket(100000.0, 0.0),
        Bracket(125000.0, 0.1),
        Bracket(150000.0, 0.1),
        Bracket(250000.0, 0.1),
        Bracket(f64::INFINITY, 0.1),
    ]
}

pub fn md_qualifying_surviving_spouse_tax_2024() -> Vec<Bracket> {
    vec![
        Bracket(1000.0, 0.0),
        Bracket(2000.0, 0.0),
        Bracket(3000.0, 0.0),
        Bracket(150000.0, 0.0),
        Bracket(175000.0, 0.1),
        Bracket(225000.0, 0.1),
        Bracket(300000.0, 0.1),
        Bracket(f64::INFINITY, 0.1),
    ]
}

pub fn md_married_filing_separately_tax_2024() -> Vec<Bracket> {
    vec![
        Bracket(1000.0, 0.0),
        Bracket(2000.0, 0.0),
        Bracket(3000.0, 0.0),
        Bracket(100000.0, 0.0),
        Bracket(125000.0, 0.1),
        Bracket(150000.0, 0.1),
        Bracket(250000.0, 0.1),
        Bracket(f64::INFINITY, 0.1),
    ]
}

pub fn md_married_filing_jointly_tax_2024() -> Vec<Bracket> {
    vec![
        Bracket(1000.0, 0.0),
        Bracket(2000.0, 0.0),
        Bracket(3000.0, 0.0),
        Bracket(150000.0, 0.0),
        Bracket(175000.0, 0.1),
        Bracket(225000.0, 0.1),
        Bracket(300000.0, 0.1),
        Bracket(f64::INFINITY, 0.1),
    ]
}

pub fn md_single_tax_2024() -> Vec<Bracket> {
    vec![
        Bracket(1000.0, 0.0),
        Bracket(2000.0, 0.0),
        Bracket(3000.0, 0.0),
        Bracket(100000.0, 0.0),
        Bracket(125000.0, 0.1),
        Bracket(150000.0, 0.1),
        Bracket(250000.0, 0.1),
        Bracket(f64::INFINITY, 0.1),
    ]
}

pub fn md_head_of_household_tax_2024() -> Vec<Bracket> {
    vec![
        Bracket(1000.0, 0.0),
        Bracket(2000.0, 0.0),
        Bracket(3000.0, 0.0),
        Bracket(150000.0, 0.0),
        Bracket(175000.0, 0.1),
        Bracket(225000.0, 0.1),
        Bracket(300000.0, 0.1),
        Bracket(f64::INFINITY, 0.1),
    ]
}

pub fn me_married_filing_jointly_tax_2024() -> Vec<Bracket> {
    vec![
        Bracket(52100.0, 0.1),
        Bracket(123250.0, 0.1),
        Bracket(f64::INFINITY, 0.1),
    ]
}

pub fn me_head_of_household_tax_2024() -> Vec<Bracket> {
    vec![
        Bracket(39050.0, 0.1),
        Bracket(92450.0, 0.1),
        Bracket(f64::INFINITY, 0.1),
    ]
}

pub fn me_married_filing_separately_tax_2024() -> Vec<Bracket> {
    vec![
        Bracket(26050.0, 0.1),
        Bracket(61600.0, 0.1),
        Bracket(f64::INFINITY, 0.1),
    ]
}

pub fn me_single_tax_2024() -> Vec<Bracket> {
    vec![
        Bracket(26050.0, 0.1),
        Bracket(61600.0, 0.1),
        Bracket(f64::INFINITY, 0.1),
    ]
}

pub fn me_qualifying_surviving_spouse_tax_2024() -> Vec<Bracket> {
    vec![
        Bracket(52100.0, 0.1),
        Bracket(123250.0, 0.1),
        Bracket(f64::INFINITY, 0.1),
    ]
}

pub fn me_head_of_household_tax_2025() -> Vec<Bracket> {
    vec![
        Bracket(40200.0, 0.1),
        Bracket(95150.0, 0.1),
        Bracket(f64::INFINITY, 0.1),
    ]
}

pub fn me_married_filing_jointly_tax_2025() -> Vec<Bracket> {
    vec![
        Bracket(53600.0, 0.1),
        Bracket(126900.0, 0.1),
        Bracket(f64::INFINITY, 0.1),
    ]
}

pub fn me_married_filing_separately_tax_2025() -> Vec<Bracket> {
    vec![
        Bracket(26800.0, 0.1),
        Bracket(63450.0, 0.1),
        Bracket(f64::INFINITY, 0.1),
    ]
}

pub fn me_single_tax_2025() -> Vec<Bracket> {
    vec![
        Bracket(26800.0, 0.1),
        Bracket(63450.0, 0.1),
        Bracket(f64::INFINITY, 0.1),
    ]
}

pub fn me_qualifying_surviving_spouse_tax_2025() -> Vec<Bracket> {
    vec![
        Bracket(53600.0, 0.1),
        Bracket(126900.0, 0.1),
        Bracket(f64::INFINITY, 0.1),
    ]
}

pub fn tn_qualifying_surviving_spouse_tax_2024() -> Vec<Bracket> {
    vec![
        Bracket(f64::INFINITY, 0.0),
    ]
}

pub fn tn_head_of_household_tax_2024() -> Vec<Bracket> {
    vec![
        Bracket(f64::INFINITY, 0.0),
    ]
}

pub fn tn_married_filing_jointly_tax_2024() -> Vec<Bracket> {
    vec![
        Bracket(f64::INFINITY, 0.0),
    ]
}

pub fn tn_single_tax_2024() -> Vec<Bracket> {
    vec![
        Bracket(f64::INFINITY, 0.0),
    ]
}

pub fn tn_married_filing_separately_tax_2024() -> Vec<Bracket> {
    vec![
        Bracket(f64::INFINITY, 0.0),
    ]
}

pub fn tn_single_tax_2025() -> Vec<Bracket> {
    vec![
        Bracket(f64::INFINITY, 0.0),
    ]
}

pub fn tn_married_filing_jointly_tax_2025() -> Vec<Bracket> {
    vec![
        Bracket(f64::INFINITY, 0.0),
    ]
}

pub fn tn_qualifying_surviving_spouse_tax_2025() -> Vec<Bracket> {
    vec![
        Bracket(f64::INFINITY, 0.0),
    ]
}

pub fn tn_head_of_household_tax_2025() -> Vec<Bracket> {
    vec![
        Bracket(f64::INFINITY, 0.0),
    ]
}

pub fn tn_married_filing_separately_tax_2025() -> Vec<Bracket> {
    vec![
        Bracket(f64::INFINITY, 0.0),
    ]
}

pub fn id_married_filing_separately_tax_2024() -> Vec<Bracket> {
    vec![
        Bracket(4673.0, 0.0),
        Bracket(f64::INFINITY, 0.1),
    ]
}

pub fn id_married_filing_jointly_tax_2024() -> Vec<Bracket> {
    vec![
        Bracket(9346.0, 0.0),
        Bracket(f64::INFINITY, 0.1),
    ]
}

pub fn id_qualifying_surviving_spouse_tax_2024() -> Vec<Bracket> {
    vec![
        Bracket(9346.0, 0.0),
        Bracket(f64::INFINITY, 0.1),
    ]
}

pub fn id_single_tax_2024() -> Vec<Bracket> {
    vec![
        Bracket(4673.0, 0.0),
        Bracket(f64::INFINITY, 0.1),
    ]
}

pub fn id_head_of_household_tax_2024() -> Vec<Bracket> {
    vec![
        Bracket(9346.0, 0.0),
        Bracket(f64::INFINITY, 0.1),
    ]
}

pub fn ks_single_tax_2024() -> Vec<Bracket> {
    vec![
        Bracket(23000.0, 0.1),
        Bracket(f64::INFINITY, 0.1),
    ]
}

pub fn ks_married_filing_separately_tax_2024() -> Vec<Bracket> {
    vec![
        Bracket(23000.0, 0.1),
        Bracket(f64::INFINITY, 0.1),
    ]
}

pub fn ks_married_filing_jointly_tax_2024() -> Vec<Bracket> {
    vec![
        Bracket(46000.0, 0.1),
        Bracket(f64::INFINITY, 0.1),
    ]
}

pub fn ks_qualifying_surviving_spouse_tax_2024() -> Vec<Bracket> {
    vec![
        Bracket(46000.0, 0.1),
        Bracket(f64::INFINITY, 0.1),
    ]
}

pub fn ks_head_of_household_tax_2024() -> Vec<Bracket> {
    vec![
        Bracket(23000.0, 0.1),
        Bracket(f64::INFINITY, 0.1),
    ]
}

pub fn mo_head_of_household_tax_2024() -> Vec<Bracket> {
    vec![
        Bracket(1273.0, 0.0),
        Bracket(2546.0, 0.0),
        Bracket(3819.0, 0.0),
        Bracket(5092.0, 0.0),
        Bracket(6365.0, 0.0),
        Bracket(7638.0, 0.0),
        Bracket(8911.0, 0.0),
        Bracket(f64::INFINITY, 0.0),
    ]
}

pub fn mo_married_filing_separately_tax_2024() -> Vec<Bracket> {
    vec![
        Bracket(1273.0, 0.0),
        Bracket(2546.0, 0.0),
        Bracket(3819.0, 0.0),
        Bracket(5092.0, 0.0),
        Bracket(6365.0, 0.0),
        Bracket(7638.0, 0.0),
        Bracket(8911.0, 0.0),
        Bracket(f64::INFINITY, 0.0),
    ]
}

pub fn mo_married_filing_jointly_tax_2024() -> Vec<Bracket> {
    vec![
        Bracket(1273.0, 0.0),
        Bracket(2546.0, 0.0),
        Bracket(3819.0, 0.0),
        Bracket(5092.0, 0.0),
        Bracket(6365.0, 0.0),
        Bracket(7638.0, 0.0),
        Bracket(8911.0, 0.0),
        Bracket(f64::INFINITY, 0.0),
    ]
}

pub fn mo_single_tax_2024() -> Vec<Bracket> {
    vec![
        Bracket(1273.0, 0.0),
        Bracket(2546.0, 0.0),
        Bracket(3819.0, 0.0),
        Bracket(5092.0, 0.0),
        Bracket(6365.0, 0.0),
        Bracket(7638.0, 0.0),
        Bracket(8911.0, 0.0),
        Bracket(f64::INFINITY, 0.0),
    ]
}

pub fn mo_qualifying_surviving_spouse_tax_2024() -> Vec<Bracket> {
    vec![
        Bracket(1273.0, 0.0),
        Bracket(2546.0, 0.0),
        Bracket(3819.0, 0.0),
        Bracket(5092.0, 0.0),
        Bracket(6365.0, 0.0),
        Bracket(7638.0, 0.0),
        Bracket(8911.0, 0.0),
        Bracket(f64::INFINITY, 0.0),
    ]
}

pub fn in_head_of_household_tax_2025() -> Vec<Bracket> {
    vec![
        Bracket(f64::INFINITY, 0.0),
    ]
}

pub fn in_married_filing_jointly_tax_2025() -> Vec<Bracket> {
    vec![
        Bracket(f64::INFINITY, 0.0),
    ]
}

pub fn in_single_tax_2025() -> Vec<Bracket> {
    vec![
        Bracket(f64::INFINITY, 0.0),
    ]
}

pub fn in_married_filing_separately_tax_2025() -> Vec<Bracket> {
    vec![
        Bracket(f64::INFINITY, 0.0),
    ]
}

pub fn in_qualifying_surviving_spouse_tax_2025() -> Vec<Bracket> {
    vec![
        Bracket(f64::INFINITY, 0.0),
    ]
}

pub fn in_single_tax_2024() -> Vec<Bracket> {
    vec![
        Bracket(f64::INFINITY, 0.0),
    ]
}

pub fn in_qualifying_surviving_spouse_tax_2024() -> Vec<Bracket> {
    vec![
        Bracket(f64::INFINITY, 0.0),
    ]
}

pub fn in_married_filing_separately_tax_2024() -> Vec<Bracket> {
    vec![
        Bracket(f64::INFINITY, 0.0),
    ]
}

pub fn in_head_of_household_tax_2024() -> Vec<Bracket> {
    vec![
        Bracket(f64::INFINITY, 0.0),
    ]
}

pub fn in_married_filing_jointly_tax_2024() -> Vec<Bracket> {
    vec![
        Bracket(f64::INFINITY, 0.0),
    ]
}

pub fn nv_single_tax_2025() -> Vec<Bracket> {
    vec![
        Bracket(f64::INFINITY, 0.0),
    ]
}

pub fn nv_married_filing_jointly_tax_2025() -> Vec<Bracket> {
    vec![
        Bracket(f64::INFINITY, 0.0),
    ]
}

pub fn nv_head_of_household_tax_2025() -> Vec<Bracket> {
    vec![
        Bracket(f64::INFINITY, 0.0),
    ]
}

pub fn nv_married_filing_separately_tax_2025() -> Vec<Bracket> {
    vec![
        Bracket(f64::INFINITY, 0.0),
    ]
}

pub fn nv_qualifying_surviving_spouse_tax_2025() -> Vec<Bracket> {
    vec![
        Bracket(f64::INFINITY, 0.0),
    ]
}

pub fn nv_qualifying_surviving_spouse_tax_2024() -> Vec<Bracket> {
    vec![
        Bracket(f64::INFINITY, 0.0),
    ]
}

pub fn nv_single_tax_2024() -> Vec<Bracket> {
    vec![
        Bracket(f64::INFINITY, 0.0),
    ]
}

pub fn nv_married_filing_separately_tax_2024() -> Vec<Bracket> {
    vec![
        Bracket(f64::INFINITY, 0.0),
    ]
}

pub fn nv_head_of_household_tax_2024() -> Vec<Bracket> {
    vec![
        Bracket(f64::INFINITY, 0.0),
    ]
}

pub fn nv_married_filing_jointly_tax_2024() -> Vec<Bracket> {
    vec![
        Bracket(f64::INFINITY, 0.0),
    ]
}

pub fn mt_single_tax_2024() -> Vec<Bracket> {
    vec![
        Bracket(20500.0, 0.0),
        Bracket(f64::INFINITY, 0.1),
    ]
}

pub fn mt_married_filing_jointly_tax_2024() -> Vec<Bracket> {
    vec![
        Bracket(41000.0, 0.0),
        Bracket(f64::INFINITY, 0.1),
    ]
}

pub fn mt_qualifying_surviving_spouse_tax_2024() -> Vec<Bracket> {
    vec![
        Bracket(41000.0, 0.0),
        Bracket(f64::INFINITY, 0.1),
    ]
}

pub fn mt_married_filing_separately_tax_2024() -> Vec<Bracket> {
    vec![
        Bracket(20500.0, 0.0),
        Bracket(f64::INFINITY, 0.1),
    ]
}

pub fn mt_head_of_household_tax_2024() -> Vec<Bracket> {
    vec![
        Bracket(30750.0, 0.0),
        Bracket(f64::INFINITY, 0.1),
    ]
}

pub fn de_married_filing_separately_tax_2024() -> Vec<Bracket> {
    vec![
        Bracket(2000.0, 0.0),
        Bracket(5000.0, 0.0),
        Bracket(10000.0, 0.0),
        Bracket(20000.0, 0.0),
        Bracket(25000.0, 0.1),
        Bracket(60000.0, 0.1),
        Bracket(f64::INFINITY, 0.1),
    ]
}

pub fn de_qualifying_surviving_spouse_tax_2024() -> Vec<Bracket> {
    vec![
        Bracket(2000.0, 0.0),
        Bracket(5000.0, 0.0),
        Bracket(10000.0, 0.0),
        Bracket(20000.0, 0.0),
        Bracket(25000.0, 0.1),
        Bracket(60000.0, 0.1),
        Bracket(f64::INFINITY, 0.1),
    ]
}

pub fn de_head_of_household_tax_2024() -> Vec<Bracket> {
    vec![
        Bracket(2000.0, 0.0),
        Bracket(5000.0, 0.0),
        Bracket(10000.0, 0.0),
        Bracket(20000.0, 0.0),
        Bracket(25000.0, 0.1),
        Bracket(60000.0, 0.1),
        Bracket(f64::INFINITY, 0.1),
    ]
}

pub fn de_single_tax_2024() -> Vec<Bracket> {
    vec![
        Bracket(2000.0, 0.0),
        Bracket(5000.0, 0.0),
        Bracket(10000.0, 0.0),
        Bracket(20000.0, 0.0),
        Bracket(25000.0, 0.1),
        Bracket(60000.0, 0.1),
        Bracket(f64::INFINITY, 0.1),
    ]
}

pub fn de_married_filing_jointly_tax_2024() -> Vec<Bracket> {
    vec![
        Bracket(2000.0, 0.0),
        Bracket(5000.0, 0.0),
        Bracket(10000.0, 0.0),
        Bracket(20000.0, 0.0),
        Bracket(25000.0, 0.1),
        Bracket(60000.0, 0.1),
        Bracket(f64::INFINITY, 0.1),
    ]
}

pub fn de_qualifying_surviving_spouse_tax_2025() -> Vec<Bracket> {
    vec![
        Bracket(2000.0, 0.0),
        Bracket(5000.0, 0.0),
        Bracket(10000.0, 0.0),
        Bracket(20000.0, 0.0),
        Bracket(25000.0, 0.1),
        Bracket(60000.0, 0.1),
        Bracket(f64::INFINITY, 0.1),
    ]
}

pub fn de_single_tax_2025() -> Vec<Bracket> {
    vec![
        Bracket(2000.0, 0.0),
        Bracket(5000.0, 0.0),
        Bracket(10000.0, 0.0),
        Bracket(20000.0, 0.0),
        Bracket(25000.0, 0.1),
        Bracket(60000.0, 0.1),
        Bracket(f64::INFINITY, 0.1),
    ]
}

pub fn de_married_filing_separately_tax_2025() -> Vec<Bracket> {
    vec![
        Bracket(2000.0, 0.0),
        Bracket(5000.0, 0.0),
        Bracket(10000.0, 0.0),
        Bracket(20000.0, 0.0),
        Bracket(25000.0, 0.1),
        Bracket(60000.0, 0.1),
        Bracket(f64::INFINITY, 0.1),
    ]
}

pub fn de_head_of_household_tax_2025() -> Vec<Bracket> {
    vec![
        Bracket(2000.0, 0.0),
        Bracket(5000.0, 0.0),
        Bracket(10000.0, 0.0),
        Bracket(20000.0, 0.0),
        Bracket(25000.0, 0.1),
        Bracket(60000.0, 0.1),
        Bracket(f64::INFINITY, 0.1),
    ]
}

pub fn de_married_filing_jointly_tax_2025() -> Vec<Bracket> {
    vec![
        Bracket(2000.0, 0.0),
        Bracket(5000.0, 0.0),
        Bracket(10000.0, 0.0),
        Bracket(20000.0, 0.0),
        Bracket(25000.0, 0.1),
        Bracket(60000.0, 0.1),
        Bracket(f64::INFINITY, 0.1),
    ]
}

pub fn ar_head_of_household_tax_2024() -> Vec<Bracket> {
    vec![
        Bracket(5499.0, 0.0),
        Bracket(10899.0, 0.0),
        Bracket(15599.0, 0.0),
        Bracket(25699.0, 0.0),
        Bracket(f64::INFINITY, 0.0),
    ]
}

pub fn ar_single_tax_2024() -> Vec<Bracket> {
    vec![
        Bracket(5499.0, 0.0),
        Bracket(10899.0, 0.0),
        Bracket(15599.0, 0.0),
        Bracket(25699.0, 0.0),
        Bracket(f64::INFINITY, 0.0),
    ]
}

pub fn ar_qualifying_surviving_spouse_tax_2024() -> Vec<Bracket> {
    vec![
        Bracket(5499.0, 0.0),
        Bracket(10899.0, 0.0),
        Bracket(15599.0, 0.0),
        Bracket(25699.0, 0.0),
        Bracket(f64::INFINITY, 0.0),
    ]
}

pub fn ar_married_filing_jointly_tax_2024() -> Vec<Bracket> {
    vec![
        Bracket(5499.0, 0.0),
        Bracket(10899.0, 0.0),
        Bracket(15599.0, 0.0),
        Bracket(25699.0, 0.0),
        Bracket(f64::INFINITY, 0.0),
    ]
}

pub fn ar_married_filing_separately_tax_2024() -> Vec<Bracket> {
    vec![
        Bracket(5499.0, 0.0),
        Bracket(10899.0, 0.0),
        Bracket(15599.0, 0.0),
        Bracket(25699.0, 0.0),
        Bracket(f64::INFINITY, 0.0),
    ]
}

pub fn ar_qualifying_surviving_spouse_tax_2025() -> Vec<Bracket> {
    vec![
        Bracket(5499.0, 0.0),
        Bracket(10899.0, 0.0),
        Bracket(15599.0, 0.0),
        Bracket(25699.0, 0.0),
        Bracket(f64::INFINITY, 0.0),
    ]
}

pub fn ar_married_filing_separately_tax_2025() -> Vec<Bracket> {
    vec![
        Bracket(5499.0, 0.0),
        Bracket(10899.0, 0.0),
        Bracket(15599.0, 0.0),
        Bracket(25699.0, 0.0),
        Bracket(f64::INFINITY, 0.0),
    ]
}

pub fn ar_single_tax_2025() -> Vec<Bracket> {
    vec![
        Bracket(5499.0, 0.0),
        Bracket(10899.0, 0.0),
        Bracket(15599.0, 0.0),
        Bracket(25699.0, 0.0),
        Bracket(f64::INFINITY, 0.0),
    ]
}

pub fn ar_head_of_household_tax_2025() -> Vec<Bracket> {
    vec![
        Bracket(5499.0, 0.0),
        Bracket(10899.0, 0.0),
        Bracket(15599.0, 0.0),
        Bracket(25699.0, 0.0),
        Bracket(f64::INFINITY, 0.0),
    ]
}

pub fn ar_married_filing_jointly_tax_2025() -> Vec<Bracket> {
    vec![
        Bracket(5499.0, 0.0),
        Bracket(10899.0, 0.0),
        Bracket(15599.0, 0.0),
        Bracket(25699.0, 0.0),
        Bracket(f64::INFINITY, 0.0),
    ]
}

pub fn ma_married_filing_separately_tax_2024() -> Vec<Bracket> {
    vec![
        Bracket(1053750.0, 0.1),
        Bracket(f64::INFINITY, 0.1),
    ]
}

pub fn ma_married_filing_jointly_tax_2024() -> Vec<Bracket> {
    vec![
        Bracket(1053750.0, 0.1),
        Bracket(f64::INFINITY, 0.1),
    ]
}

pub fn ma_head_of_household_tax_2024() -> Vec<Bracket> {
    vec![
        Bracket(1053750.0, 0.1),
        Bracket(f64::INFINITY, 0.1),
    ]
}

pub fn ma_qualifying_surviving_spouse_tax_2024() -> Vec<Bracket> {
    vec![
        Bracket(1053750.0, 0.1),
        Bracket(f64::INFINITY, 0.1),
    ]
}

pub fn ma_single_tax_2024() -> Vec<Bracket> {
    vec![
        Bracket(1053750.0, 0.1),
        Bracket(f64::INFINITY, 0.1),
    ]
}

pub fn ma_married_filing_jointly_tax_2025() -> Vec<Bracket> {
    vec![
        Bracket(1083150.0, 0.1),
        Bracket(f64::INFINITY, 0.1),
    ]
}

pub fn ma_qualifying_surviving_spouse_tax_2025() -> Vec<Bracket> {
    vec![
        Bracket(1083150.0, 0.1),
        Bracket(f64::INFINITY, 0.1),
    ]
}

pub fn ma_single_tax_2025() -> Vec<Bracket> {
    vec![
        Bracket(1083150.0, 0.1),
        Bracket(f64::INFINITY, 0.1),
    ]
}

pub fn ma_married_filing_separately_tax_2025() -> Vec<Bracket> {
    vec![
        Bracket(1083150.0, 0.1),
        Bracket(f64::INFINITY, 0.1),
    ]
}

pub fn ma_head_of_household_tax_2025() -> Vec<Bracket> {
    vec![
        Bracket(1083150.0, 0.1),
        Bracket(f64::INFINITY, 0.1),
    ]
}

pub fn ga_head_of_household_tax_2024() -> Vec<Bracket> {
    vec![
        Bracket(f64::INFINITY, 0.1),
    ]
}

pub fn ga_married_filing_separately_tax_2024() -> Vec<Bracket> {
    vec![
        Bracket(f64::INFINITY, 0.1),
    ]
}

pub fn ga_qualifying_surviving_spouse_tax_2024() -> Vec<Bracket> {
    vec![
        Bracket(f64::INFINITY, 0.1),
    ]
}

pub fn ga_single_tax_2024() -> Vec<Bracket> {
    vec![
        Bracket(f64::INFINITY, 0.1),
    ]
}

pub fn ga_married_filing_jointly_tax_2024() -> Vec<Bracket> {
    vec![
        Bracket(f64::INFINITY, 0.1),
    ]
}

pub fn ga_married_filing_jointly_tax_2025() -> Vec<Bracket> {
    vec![
        Bracket(f64::INFINITY, 0.1),
    ]
}

pub fn ga_married_filing_separately_tax_2025() -> Vec<Bracket> {
    vec![
        Bracket(f64::INFINITY, 0.1),
    ]
}

pub fn ga_qualifying_surviving_spouse_tax_2025() -> Vec<Bracket> {
    vec![
        Bracket(f64::INFINITY, 0.1),
    ]
}

pub fn ga_head_of_household_tax_2025() -> Vec<Bracket> {
    vec![
        Bracket(f64::INFINITY, 0.1),
    ]
}

pub fn ga_single_tax_2025() -> Vec<Bracket> {
    vec![
        Bracket(f64::INFINITY, 0.1),
    ]
}

pub fn ky_single_tax_2024() -> Vec<Bracket> {
    vec![
        Bracket(f64::INFINITY, 0.0),
    ]
}

pub fn ky_married_filing_jointly_tax_2024() -> Vec<Bracket> {
    vec![
        Bracket(f64::INFINITY, 0.0),
    ]
}

pub fn ky_married_filing_separately_tax_2024() -> Vec<Bracket> {
    vec![
        Bracket(f64::INFINITY, 0.0),
    ]
}

pub fn ky_head_of_household_tax_2024() -> Vec<Bracket> {
    vec![
        Bracket(f64::INFINITY, 0.4),
    ]
}

pub fn ky_qualifying_surviving_spouse_tax_2024() -> Vec<Bracket> {
    vec![
        Bracket(f64::INFINITY, 0.0),
    ]
}

pub fn ky_married_filing_separately_tax_2025() -> Vec<Bracket> {
    vec![
        Bracket(f64::INFINITY, 0.0),
    ]
}

pub fn ky_head_of_household_tax_2025() -> Vec<Bracket> {
    vec![
        Bracket(f64::INFINITY, 0.0),
    ]
}

pub fn ky_single_tax_2025() -> Vec<Bracket> {
    vec![
        Bracket(f64::INFINITY, 0.0),
    ]
}

pub fn ky_married_filing_jointly_tax_2025() -> Vec<Bracket> {
    vec![
        Bracket(f64::INFINITY, 0.0),
    ]
}

pub fn ky_qualifying_surviving_spouse_tax_2025() -> Vec<Bracket> {
    vec![
        Bracket(f64::INFINITY, 0.0),
    ]
}

pub fn tx_married_filing_jointly_tax_2024() -> Vec<Bracket> {
    vec![
        Bracket(f64::INFINITY, 0.0),
    ]
}

pub fn tx_head_of_household_tax_2024() -> Vec<Bracket> {
    vec![
        Bracket(f64::INFINITY, 0.0),
    ]
}

pub fn tx_qualifying_surviving_spouse_tax_2024() -> Vec<Bracket> {
    vec![
        Bracket(f64::INFINITY, 0.0),
    ]
}

pub fn tx_married_filing_separately_tax_2024() -> Vec<Bracket> {
    vec![
        Bracket(f64::INFINITY, 0.0),
    ]
}

pub fn tx_single_tax_2024() -> Vec<Bracket> {
    vec![
        Bracket(f64::INFINITY, 0.0),
    ]
}

pub fn tx_head_of_household_tax_2025() -> Vec<Bracket> {
    vec![
        Bracket(f64::INFINITY, 0.0),
    ]
}

pub fn tx_married_filing_jointly_tax_2025() -> Vec<Bracket> {
    vec![
        Bracket(f64::INFINITY, 0.0),
    ]
}

pub fn tx_married_filing_separately_tax_2025() -> Vec<Bracket> {
    vec![
        Bracket(f64::INFINITY, 0.0),
    ]
}

pub fn tx_single_tax_2025() -> Vec<Bracket> {
    vec![
        Bracket(f64::INFINITY, 0.0),
    ]
}

pub fn tx_qualifying_surviving_spouse_tax_2025() -> Vec<Bracket> {
    vec![
        Bracket(f64::INFINITY, 0.0),
    ]
}

pub fn hi_married_filing_jointly_tax_2024() -> Vec<Bracket> {
    vec![
        Bracket(4800.0, 0.0),
        Bracket(9600.0, 0.0),
        Bracket(19200.0, 0.1),
        Bracket(28800.0, 0.1),
        Bracket(38400.0, 0.1),
        Bracket(48000.0, 0.1),
        Bracket(72000.0, 0.1),
        Bracket(96000.0, 0.1),
        Bracket(300000.0, 0.1),
        Bracket(350000.0, 0.1),
        Bracket(400000.0, 0.1),
        Bracket(f64::INFINITY, 0.1),
    ]
}

pub fn hi_qualifying_surviving_spouse_tax_2024() -> Vec<Bracket> {
    vec![
        Bracket(4800.0, 0.0),
        Bracket(9600.0, 0.0),
        Bracket(19200.0, 0.1),
        Bracket(28800.0, 0.1),
        Bracket(38400.0, 0.1),
        Bracket(48000.0, 0.1),
        Bracket(72000.0, 0.1),
        Bracket(96000.0, 0.1),
        Bracket(300000.0, 0.1),
        Bracket(350000.0, 0.1),
        Bracket(400000.0, 0.1),
        Bracket(f64::INFINITY, 0.1),
    ]
}

pub fn hi_head_of_household_tax_2024() -> Vec<Bracket> {
    vec![
        Bracket(3600.0, 0.0),
        Bracket(7200.0, 0.0),
        Bracket(14400.0, 0.1),
        Bracket(21600.0, 0.1),
        Bracket(28800.0, 0.1),
        Bracket(36000.0, 0.1),
        Bracket(54000.0, 0.1),
        Bracket(72000.0, 0.1),
        Bracket(225000.0, 0.1),
        Bracket(262500.0, 0.1),
        Bracket(300000.0, 0.1),
        Bracket(f64::INFINITY, 0.1),
    ]
}

pub fn hi_married_filing_separately_tax_2024() -> Vec<Bracket> {
    vec![
        Bracket(2400.0, 0.0),
        Bracket(4800.0, 0.0),
        Bracket(9600.0, 0.1),
        Bracket(14400.0, 0.1),
        Bracket(19200.0, 0.1),
        Bracket(24000.0, 0.1),
        Bracket(36000.0, 0.1),
        Bracket(48000.0, 0.1),
        Bracket(150000.0, 0.1),
        Bracket(175000.0, 0.1),
        Bracket(200000.0, 0.1),
        Bracket(f64::INFINITY, 0.1),
    ]
}

pub fn hi_single_tax_2024() -> Vec<Bracket> {
    vec![
        Bracket(2400.0, 0.0),
        Bracket(4800.0, 0.0),
        Bracket(9600.0, 0.1),
        Bracket(14400.0, 0.1),
        Bracket(19200.0, 0.1),
        Bracket(24000.0, 0.1),
        Bracket(36000.0, 0.1),
        Bracket(48000.0, 0.1),
        Bracket(150000.0, 0.1),
        Bracket(175000.0, 0.1),
        Bracket(200000.0, 0.1),
        Bracket(f64::INFINITY, 0.1),
    ]
}

pub fn hi_married_filing_separately_tax_2025() -> Vec<Bracket> {
    vec![
        Bracket(9600.0, 0.0),
        Bracket(14400.0, 0.0),
        Bracket(19200.0, 0.1),
        Bracket(24000.0, 0.1),
        Bracket(36000.0, 0.1),
        Bracket(48000.0, 0.1),
        Bracket(125000.0, 0.1),
        Bracket(175000.0, 0.1),
        Bracket(225000.0, 0.1),
        Bracket(275000.0, 0.1),
        Bracket(325000.0, 0.1),
        Bracket(f64::INFINITY, 0.1),
    ]
}

pub fn hi_married_filing_jointly_tax_2025() -> Vec<Bracket> {
    vec![
        Bracket(19200.0, 0.0),
        Bracket(28800.0, 0.0),
        Bracket(38400.0, 0.1),
        Bracket(48000.0, 0.1),
        Bracket(72000.0, 0.1),
        Bracket(96000.0, 0.1),
        Bracket(250000.0, 0.1),
        Bracket(350000.0, 0.1),
        Bracket(450000.0, 0.1),
        Bracket(550000.0, 0.1),
        Bracket(650000.0, 0.1),
        Bracket(f64::INFINITY, 0.1),
    ]
}

pub fn hi_single_tax_2025() -> Vec<Bracket> {
    vec![
        Bracket(9600.0, 0.0),
        Bracket(14400.0, 0.0),
        Bracket(19200.0, 0.1),
        Bracket(24000.0, 0.1),
        Bracket(36000.0, 0.1),
        Bracket(48000.0, 0.1),
        Bracket(125000.0, 0.1),
        Bracket(175000.0, 0.1),
        Bracket(225000.0, 0.1),
        Bracket(275000.0, 0.1),
        Bracket(325000.0, 0.1),
        Bracket(f64::INFINITY, 0.1),
    ]
}

pub fn hi_head_of_household_tax_2025() -> Vec<Bracket> {
    vec![
        Bracket(14400.0, 0.0),
        Bracket(21600.0, 0.0),
        Bracket(28800.0, 0.1),
        Bracket(36000.0, 0.1),
        Bracket(54000.0, 0.1),
        Bracket(72000.0, 0.1),
        Bracket(187500.0, 0.1),
        Bracket(262500.0, 0.1),
        Bracket(337600.0, 0.1),
        Bracket(412500.0, 0.1),
        Bracket(487500.0, 0.1),
        Bracket(f64::INFINITY, 0.1),
    ]
}

pub fn hi_qualifying_surviving_spouse_tax_2025() -> Vec<Bracket> {
    vec![
        Bracket(19200.0, 0.0),
        Bracket(28800.0, 0.0),
        Bracket(38400.0, 0.1),
        Bracket(48000.0, 0.1),
        Bracket(72000.0, 0.1),
        Bracket(96000.0, 0.1),
        Bracket(250000.0, 0.1),
        Bracket(350000.0, 0.1),
        Bracket(450000.0, 0.1),
        Bracket(550000.0, 0.1),
        Bracket(650000.0, 0.1),
        Bracket(f64::INFINITY, 0.1),
    ]
}

pub fn ak_qualifying_surviving_spouse_tax_2025() -> Vec<Bracket> {
    vec![
        Bracket(f64::INFINITY, 0.0),
    ]
}

pub fn ak_single_tax_2025() -> Vec<Bracket> {
    vec![
        Bracket(f64::INFINITY, 0.0),
    ]
}

pub fn ak_married_filing_separately_tax_2025() -> Vec<Bracket> {
    vec![
        Bracket(f64::INFINITY, 0.0),
    ]
}

pub fn ak_head_of_household_tax_2025() -> Vec<Bracket> {
    vec![
        Bracket(f64::INFINITY, 0.0),
    ]
}

pub fn ak_married_filing_jointly_tax_2025() -> Vec<Bracket> {
    vec![
        Bracket(f64::INFINITY, 0.0),
    ]
}

pub fn ak_qualifying_surviving_spouse_tax_2024() -> Vec<Bracket> {
    vec![
        Bracket(f64::INFINITY, 0.0),
    ]
}

pub fn ak_married_filing_separately_tax_2024() -> Vec<Bracket> {
    vec![
        Bracket(f64::INFINITY, 0.0),
    ]
}

pub fn ak_married_filing_jointly_tax_2024() -> Vec<Bracket> {
    vec![
        Bracket(f64::INFINITY, 0.0),
    ]
}

pub fn ak_head_of_household_tax_2024() -> Vec<Bracket> {
    vec![
        Bracket(f64::INFINITY, 0.0),
    ]
}

pub fn ak_single_tax_2024() -> Vec<Bracket> {
    vec![
        Bracket(f64::INFINITY, 0.0),
    ]
}

pub fn il_head_of_household_tax_2024() -> Vec<Bracket> {
    vec![
        Bracket(f64::INFINITY, 0.0),
    ]
}

pub fn il_married_filing_separately_tax_2024() -> Vec<Bracket> {
    vec![
        Bracket(f64::INFINITY, 0.0),
    ]
}

pub fn il_single_tax_2024() -> Vec<Bracket> {
    vec![
        Bracket(f64::INFINITY, 0.0),
    ]
}

pub fn il_married_filing_jointly_tax_2024() -> Vec<Bracket> {
    vec![
        Bracket(f64::INFINITY, 0.0),
    ]
}

pub fn il_qualifying_surviving_spouse_tax_2024() -> Vec<Bracket> {
    vec![
        Bracket(f64::INFINITY, 0.0),
    ]
}

pub fn il_qualifying_surviving_spouse_tax_2025() -> Vec<Bracket> {
    vec![
        Bracket(f64::INFINITY, 0.0),
    ]
}

pub fn il_married_filing_separately_tax_2025() -> Vec<Bracket> {
    vec![
        Bracket(f64::INFINITY, 0.0),
    ]
}

pub fn il_married_filing_jointly_tax_2025() -> Vec<Bracket> {
    vec![
        Bracket(f64::INFINITY, 0.0),
    ]
}

pub fn il_single_tax_2025() -> Vec<Bracket> {
    vec![
        Bracket(f64::INFINITY, 0.0),
    ]
}

pub fn il_head_of_household_tax_2025() -> Vec<Bracket> {
    vec![
        Bracket(f64::INFINITY, 0.0),
    ]
}

pub fn ms_head_of_household_tax_2024() -> Vec<Bracket> {
    vec![
        Bracket(10000.0, 0.0),
        Bracket(f64::INFINITY, 0.0),
    ]
}

pub fn ms_married_filing_jointly_tax_2024() -> Vec<Bracket> {
    vec![
        Bracket(10000.0, 0.0),
        Bracket(f64::INFINITY, 0.0),
    ]
}

pub fn ms_single_tax_2024() -> Vec<Bracket> {
    vec![
        Bracket(10000.0, 0.0),
        Bracket(f64::INFINITY, 0.0),
    ]
}

pub fn ms_married_filing_separately_tax_2024() -> Vec<Bracket> {
    vec![
        Bracket(10000.0, 0.0),
        Bracket(f64::INFINITY, 0.0),
    ]
}

pub fn ms_qualifying_surviving_spouse_tax_2024() -> Vec<Bracket> {
    vec![
        Bracket(10000.0, 0.0),
        Bracket(f64::INFINITY, 0.0),
    ]
}

pub fn ms_single_tax_2025() -> Vec<Bracket> {
    vec![
        Bracket(10000.0, 0.0),
        Bracket(f64::INFINITY, 0.0),
    ]
}

pub fn ms_married_filing_jointly_tax_2025() -> Vec<Bracket> {
    vec![
        Bracket(10000.0, 0.0),
        Bracket(f64::INFINITY, 0.0),
    ]
}

pub fn ms_married_filing_separately_tax_2025() -> Vec<Bracket> {
    vec![
        Bracket(10000.0, 0.0),
        Bracket(f64::INFINITY, 0.0),
    ]
}

pub fn ms_qualifying_surviving_spouse_tax_2025() -> Vec<Bracket> {
    vec![
        Bracket(10000.0, 0.0),
        Bracket(f64::INFINITY, 0.0),
    ]
}

pub fn ms_head_of_household_tax_2025() -> Vec<Bracket> {
    vec![
        Bracket(10000.0, 0.0),
        Bracket(f64::INFINITY, 0.0),
    ]
}

pub fn ia_head_of_household_tax_2025() -> Vec<Bracket> {
    vec![
        Bracket(f64::INFINITY, 0.0),
    ]
}

pub fn ia_single_tax_2025() -> Vec<Bracket> {
    vec![
        Bracket(f64::INFINITY, 0.0),
    ]
}

pub fn ia_qualifying_surviving_spouse_tax_2025() -> Vec<Bracket> {
    vec![
        Bracket(f64::INFINITY, 0.0),
    ]
}

pub fn ia_married_filing_jointly_tax_2025() -> Vec<Bracket> {
    vec![
        Bracket(f64::INFINITY, 0.0),
    ]
}

pub fn ia_married_filing_separately_tax_2025() -> Vec<Bracket> {
    vec![
        Bracket(f64::INFINITY, 0.0),
    ]
}

pub fn ia_qualifying_surviving_spouse_tax_2024() -> Vec<Bracket> {
    vec![
        Bracket(12420.0, 0.0),
        Bracket(62100.0, 0.0),
        Bracket(f64::INFINITY, 0.1),
    ]
}

pub fn ia_head_of_household_tax_2024() -> Vec<Bracket> {
    vec![
        Bracket(6210.0, 0.0),
        Bracket(31050.0, 0.0),
        Bracket(f64::INFINITY, 0.1),
    ]
}

pub fn ia_single_tax_2024() -> Vec<Bracket> {
    vec![
        Bracket(6210.0, 0.0),
        Bracket(31050.0, 0.0),
        Bracket(f64::INFINITY, 0.1),
    ]
}

pub fn ia_married_filing_separately_tax_2024() -> Vec<Bracket> {
    vec![
        Bracket(6210.0, 0.0),
        Bracket(31050.0, 0.0),
        Bracket(f64::INFINITY, 0.1),
    ]
}

pub fn ia_married_filing_jointly_tax_2024() -> Vec<Bracket> {
    vec![
        Bracket(12420.0, 0.0),
        Bracket(62100.0, 0.0),
        Bracket(f64::INFINITY, 0.1),
    ]
}

pub fn nj_head_of_household_tax_2024() -> Vec<Bracket> {
    vec![
        Bracket(20000.0, 0.0),
        Bracket(50000.0, 0.0),
        Bracket(70000.0, 0.0),
        Bracket(80000.0, 0.1),
        Bracket(150000.0, 0.1),
        Bracket(1000000.0, 0.1),
        Bracket(f64::INFINITY, 0.1),
    ]
}

pub fn nj_married_filing_separately_tax_2024() -> Vec<Bracket> {
    vec![
        Bracket(20000.0, 0.0),
        Bracket(35000.0, 0.0),
        Bracket(40000.0, 0.0),
        Bracket(75000.0, 0.1),
        Bracket(500000.0, 0.1),
        Bracket(1000000.0, 0.1),
        Bracket(f64::INFINITY, 0.1),
    ]
}

pub fn nj_single_tax_2024() -> Vec<Bracket> {
    vec![
        Bracket(20000.0, 0.0),
        Bracket(35000.0, 0.0),
        Bracket(40000.0, 0.0),
        Bracket(75000.0, 0.1),
        Bracket(500000.0, 0.1),
        Bracket(1000000.0, 0.1),
        Bracket(f64::INFINITY, 0.1),
    ]
}

pub fn nj_qualifying_surviving_spouse_tax_2024() -> Vec<Bracket> {
    vec![
        Bracket(20000.0, 0.0),
        Bracket(50000.0, 0.0),
        Bracket(70000.0, 0.0),
        Bracket(80000.0, 0.1),
        Bracket(150000.0, 0.1),
        Bracket(1000000.0, 0.1),
        Bracket(f64::INFINITY, 0.1),
    ]
}

pub fn nj_married_filing_jointly_tax_2024() -> Vec<Bracket> {
    vec![
        Bracket(20000.0, 0.0),
        Bracket(50000.0, 0.0),
        Bracket(70000.0, 0.0),
        Bracket(80000.0, 0.1),
        Bracket(150000.0, 0.1),
        Bracket(1000000.0, 0.1),
        Bracket(f64::INFINITY, 0.1),
    ]
}

pub fn nj_married_filing_separately_tax_2025() -> Vec<Bracket> {
    vec![
        Bracket(20000.0, 0.0),
        Bracket(35000.0, 0.0),
        Bracket(40000.0, 0.0),
        Bracket(75000.0, 0.1),
        Bracket(500000.0, 0.1),
        Bracket(1000000.0, 0.1),
        Bracket(f64::INFINITY, 0.1),
    ]
}

pub fn nj_qualifying_surviving_spouse_tax_2025() -> Vec<Bracket> {
    vec![
        Bracket(20000.0, 0.0),
        Bracket(50000.0, 0.0),
        Bracket(70000.0, 0.0),
        Bracket(80000.0, 0.1),
        Bracket(150000.0, 0.1),
        Bracket(1000000.0, 0.1),
        Bracket(f64::INFINITY, 0.1),
    ]
}

pub fn nj_single_tax_2025() -> Vec<Bracket> {
    vec![
        Bracket(20000.0, 0.0),
        Bracket(35000.0, 0.0),
        Bracket(40000.0, 0.0),
        Bracket(75000.0, 0.1),
        Bracket(500000.0, 0.1),
        Bracket(1000000.0, 0.1),
        Bracket(f64::INFINITY, 0.1),
    ]
}

pub fn nj_married_filing_jointly_tax_2025() -> Vec<Bracket> {
    vec![
        Bracket(20000.0, 0.0),
        Bracket(50000.0, 0.0),
        Bracket(70000.0, 0.0),
        Bracket(80000.0, 0.1),
        Bracket(150000.0, 0.1),
        Bracket(1000000.0, 0.1),
        Bracket(f64::INFINITY, 0.1),
    ]
}

pub fn nj_head_of_household_tax_2025() -> Vec<Bracket> {
    vec![
        Bracket(20000.0, 0.0),
        Bracket(50000.0, 0.0),
        Bracket(70000.0, 0.0),
        Bracket(80000.0, 0.1),
        Bracket(150000.0, 0.1),
        Bracket(1000000.0, 0.1),
        Bracket(f64::INFINITY, 0.1),
    ]
}

pub fn nh_married_filing_separately_tax_2024() -> Vec<Bracket> {
    vec![
        Bracket(f64::INFINITY, 0.0),
    ]
}

pub fn nh_married_filing_jointly_tax_2024() -> Vec<Bracket> {
    vec![
        Bracket(f64::INFINITY, 0.0),
    ]
}

pub fn nh_qualifying_surviving_spouse_tax_2024() -> Vec<Bracket> {
    vec![
        Bracket(f64::INFINITY, 0.0),
    ]
}

pub fn nh_head_of_household_tax_2024() -> Vec<Bracket> {
    vec![
        Bracket(f64::INFINITY, 0.0),
    ]
}

pub fn nh_single_tax_2024() -> Vec<Bracket> {
    vec![
        Bracket(f64::INFINITY, 0.0),
    ]
}

pub fn nh_head_of_household_tax_2025() -> Vec<Bracket> {
    vec![
        Bracket(f64::INFINITY, 0.0),
    ]
}

pub fn nh_single_tax_2025() -> Vec<Bracket> {
    vec![
        Bracket(f64::INFINITY, 0.0),
    ]
}

pub fn nh_married_filing_separately_tax_2025() -> Vec<Bracket> {
    vec![
        Bracket(f64::INFINITY, 0.0),
    ]
}

pub fn nh_married_filing_jointly_tax_2025() -> Vec<Bracket> {
    vec![
        Bracket(f64::INFINITY, 0.0),
    ]
}

pub fn nh_qualifying_surviving_spouse_tax_2025() -> Vec<Bracket> {
    vec![
        Bracket(f64::INFINITY, 0.0),
    ]
}

